Mise en place de la machine virtuelle :

Debian : 
- c'est un systeme d'exploitation libre et open source base sur le noyau linux
- stable et robuste
- utilise apt qui permet d’installer, de mettre à jour et de supprimer des logiciels facilement
- systeme de qualite sans se soucier des dernieres fonctionnalite

UFW :

Outil de configuration de pare-feu, permet de creer un pare-feu sur l'hote
UFW permet de simplifier la gestion des règles du pare-feu

 Installation et configuration de l'UFT
- iptables permet a un admin systeme de configurer les regles du pare-feu
- sudo apt install ufw pour installer le pare-feu
- sudo ufw enable nous montre que le pare-feu est actif
- sudo ufw allow 4242 permet de laisser notre pare-feu accepter les connexions dans le port4242
- sudo ufw status permet de verifier l etat du pare-feu
- sudo ufw delete allow 4242 permet de supprimer une regle


sudo :

Changer nom host :
- sudo hostnamectl set-hostname <new_hostname>
- hostnamectl status

Afficher partition :
- lsblk
- LVM permet de gérer les partitions de disque, permettant aux administrateurs de modifier, redimensionner et gérer les systèmes de fichiers

Ajouter au groupe un utilisateur :
- sudo adduser <login> permet de creer un utilisateur additionel
- sudo adduser dlefur user42 inclut un utilisateur dans les groupes sudo et user42
- getent group sudo et getent group user42 permet de verifier si les groupes sudo et user42 sont present avec notre utilisateur

- Le début de l'installation commence par changer l'utilisateur en root afin que nous puissions installer le sudo
- Installation sudo avec apt install sudo
- sudo reboot permet de redemarrer la machine
- sudo -V permet de montrer les infos sudo
- su permet de passer en root dlefur42

- sudo addgroup user42 permet de creer un groupe appeler user42
- GID est l'identifiant du groupe

grep :
- permet de rechercher des informations precise dans des fichiers

awk :
- lit un fichier ligne par ligne et divise chaque ligne en champs ou colonnes

TCP :
- garantit que les données sont transmises dans le bon ordre et sans pertes

1 : Installation de la configuration sudo et des groupes d'utilisateurs


2 : Installation et configuration de SSH
-  L'acronyme SSH signifie Secure Shell permet de communiquer via un canal securiser entre deux ordinateurs,
   entre un client  et un serveur, les donnees ne peuvent pas etre lues par des tiers
- sudo apt update permet de mettre a jour le systeme
- sudo apt install openssh-server est l'outil principal pour l'acces a distance avec le protocole SSH
- sudo service ssh status permet si l'etat est actif
- sudo apt install vim permet d'installer vim

4 : Mise en place politique sudo
- creer le fichier pour stocker la politique sudo
- creer un dossier pour que chaque commande soit enregistre

Defaults  passwd_tries=3
Defaults  badpass_message="Mensaje de error personalizado"
Defaults  logfile="/var/log/sudo/sudo_config"
Defaults  log_input, log_output
Defaults  iolog_dir="/var/log/sudo"
Defaults  requiretty
Defaults  secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

ligne 1 : nombre d'essaie pour entrer le mdp sudo
ligne 2 : message d erreur en cas de mdp faux
ligne 3 : le chemin ou les logs sudo seront stocker
ligne 4 : ce qui sera enregistrer comme entree et sortie
ligne 5 : repertoire ou sont stocker entre et sortie (log input et output sont enregister dans /var/log/sudo)
ligne 6 : exige que sudo soit executer depuis un terminal TTY (force l'utilisation d un terminal pour lancer des commandes)
ligne 7 : definie le chemin securise pour les executable que sudo est autoriser a lancer

5 : Editer un mdp fort
- entrer dans l editeur avec vim
- pass_max_day est le jour max jusqu'a l'expiration du mot de passe
- pass_min_day minimum de jour jusqu'a que le mdp change
- pass_warn_age est le nbr de jour que sera avertir l'utilisateur pour changer son mdp
- sudo apt install libpam-pwquality permet d utiliser des paquets pour definir des regles stricte dans le mdp, par exemple longueur min mdp, chiffre et majuscule, mdp trop simple, mdp similaire

minlen=10
ucredit=-1
dcredit=-1
lcredit=-1
maxrepeat=3
reject_username
difok=7
enforce_for_root

ligne 1 : le nbr de caractere mini que le mdp doit contenir
ligne 2 : le mot de passe doit au moins contenir une lettre majuscule
ligne 3 : le monde de passe doit au moins contenir un chiffre.
ligne 4 : le mot de passe doit au moins contenir une lettre minuscule.
ligne 5 : le mdp ne doit pas contenir 3 fois le meme caractere 
ligne 6 : le mdp ne doit pas contenir le nom de l'utilisateur
ligne 7 : le mot de passe qu'il doit contenir au moins sept caractères diférent du dernier mot de passe usé.
ligne 8 : l’option enforce_for_root permet d'appliquer strictement les règles de sécurité des mots de passe configurées pour tous les utilisateurs, y compris root

- modifier les caracteristique du dessus pour l'utilisateur root
- sudo chage -l <username>pour vérifier le mot de passe de l'utilisateur de root et de login
-  sudo chage -m <time> <username> et sudo chage -M <time> <username> permet de modifier les caracteristique du mdp

6 : Connexion par SSH
- ssh <user>@localhost -p 4242 permet de se connecter via SSH a notre port 4242
root ne dois pas se connecter
avec dlefur oui

7 : Script 
- uname -a cette commande permet d'imprimer toutes les informations, sauf si le CPU n'est pas connu
- grep "physical id" /proc/cpinfo, cette partie recherche toutes les lignes contenant la chaîne "physical id" dans le fichier /proc/cpuinfo
chaque ligne "physical id" représente un processeur physique unique.
- grep processor /proc/cpuinfo | wc -l pour le processeur
- free permet de montrer la memoire ram
- free --mega | awk '$1 == "Mem:" {print $3}' permet d'afficher la memoire utiliser
- free --mega | awk '$1 == "Mem:" {print $2} permet d'obtenir la memoire totale
- free --mega | awk '$1 == "Mem:" {printf("(%.2f%%)\n", $3/$2*100)}' permet d'imprimer le pourcentage de ram utiliser
- df -m | grep "/dev/" | grep -v "/boot" | awk '{memory_use += $3} END {print memory_use}' permet de visualiser la memoire occuper et dispo du disque
df : signifie systeme de fichiers de disque
grep pour montrer seulement les ligne de /dev
grep -v pour exclure les ligne contenant /boot
- df -m | grep "/dev/" | grep -v "/boot" | awk '{use += $3} {total += $2} END {printf("(%d%%)\n"), use/total*100}' combiner deux commande, un pour la memoire utiliser et un pour la memoire totale pour obtenir le pourcentage
- vmstat 1 4 | tail -1 | awk '{print $15}' permet de voir le pourcentage d'utilisation 
1 4 : seconde intervalle
tail -1 imprime la sortie de la derniere ligne
print 15 affiche que le mot 15 qui est l'utilisation de la memoire disponible
- who -b | awk '$1 == "system" {print $3 " " $4}' pour la voir la date et heure du dernier redemarrage
- if [ $(lsblk | grep "lvm" | wc -l) -gt 0 ]; then echo yes; else echo no; fi pour vérifier si LVM est actif ou non, nous utiliserons le lsblk, une commande qui nous montre des informations sur tous les dispositifs de bloc (disques durs, SSD, mémoires, etc.) parmi toutes les informations qu'il fournit, nous pouvons voir lvm dans le type de gestionnaire. Pour cette commande, nous ferons un si parce que nous imprimerons Oui ou Non. La condition que nous recherchons sera de compter le nombre de lignes dans lesquelles "lvm" apparaît et s'il y a plus de 0 nous imprimerons Oui, s'il y a 0 nous imprimerons Non
- ss -ta | grep ESTAB | wc -l permet de voir le nbr de connexion TCP etablie et utiliser grep pour voir ceux qui sont etablie
- users | wc -w permet de nous montrer les nombre d'utilisateurs
- ip link | grep "link/ether" | awk '{print $2}' permet d'obtenir l'adresse ip mac
- journalctl _COMM=sudo | grep COMMAND | wc -l permet d'obtenir le nbr de commande executer avec sudo

#!/bin/bash

# ARCH
arch=$(uname -a)

# CPU PHYSICAL
cpuf=$(grep "physical id" /proc/cpuinfo | wc -l)

# CPU VIRTUAL
cpuv=$(grep "processor" /proc/cpuinfo | wc -l)

# RAM
ram_total=$(free --mega | awk '$1 == "Mem:" {print $2}')
ram_use=$(free --mega | awk '$1 == "Mem:" {print $3}')
ram_percent=$(free --mega | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}')

# DISK
disk_total=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_t += $2} END {printf ("%.1fGb\n"), disk_t/1024}')
disk_use=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} END {print disk_u}')
disk_percent=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} {disk_t+= $2} END {printf("%d"), disk_u/disk_t*100}')

# CPU LOAD
cpul=$(vmstat 1 2 | tail -1 | awk '{printf $15}')
cpu_op=$(expr 100 - $cpul)
cpu_fin=$(printf "%.1f" $cpu_op)

# LAST BOOT
lb=$(who -b | awk '$1 == "system" {print $3 " " $4}')

# LVM USE
lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -gt 0 ]; then echo yes; else echo no; fi)

# TCP CONNEXIONS
tcpc=$(ss -ta | grep ESTAB | wc -l)

# USER LOG
ulog=$(users | wc -w)

# NETWORK
ip=$(hostname -I)
mac=$(ip link | grep "link/ether" | awk '{print $2}')

# SUDO
cmnd=$(journalctl _COMM=sudo | grep COMMAND | wc -l)

wall "	Architecture: $arch
	CPU physical: $cpuf
	vCPU: $cpuv
	Memory Usage: $ram_use/${ram_total}MB ($ram_percent%)
	Disk Usage: $disk_use/${disk_total} ($disk_percent%)
	CPU load: $cpu_fin%
	Last boot: $lb
	LVM use: $lvmu
	Connections TCP: $tcpc ESTABLISHED
	User log: $ulog
	Network: IP $ip ($mac)
	Sudo: $cmnd cmd"

  8 : Crontab
- sudo crontab -u root -e modifie le crontab de l'utilisateur root -u, -e par defaut utilisateur courant, -e ouvrir editeur de texte
- */10 * * * * sh /ruta del script
*/10 signifie que la tache s execute toute les 10 minutes
* tache execute toutes les heures
* tache execute tous les jours du mois
* tache execute tous les mois
* tache execute tous les jours de la semaine
le script sera exectuer toute les 10 min , chaque jour, chaque mois quelque soit le jour de la semaine